ncol9plants
ncol(plants)
object.size(plants)
names(plants)
head(plants)
head(plants,10)
tail(15)
tail(plants,15)
summary(plants)
table(plants$Active_Growth_Period)
str(plants)
install.packages("swirl")
install.packages("swirl")
install.packages("swirl")
install.packages("swirl")
liba
library("swirl")
library(swirl)
install.packages("swirl")
install.packages("swirl")
install.packages("swirl")
install.package
install.package("swirl")
install.packages("swirl")
library(swirl)
swirl()
5+7
x <- 5+7
x
y <- x-3
y
z <- c(1.1, 9, 3.14)
?c
z
C(z, 555)
c(z, 555)
c(z, 555, z)
z*2 + 100
my_sqrt(z-1)
my_sqrt <- sqrt(z-1)
my_sqrt
my_div(z/my_sqrt)
my_div <- z/my_sqrt
my_div
c(1,2,3,4)+c(0,10)
c(1,2,3,4) + c(0,10,100)
z*2 + 1000
my_div
getwd()
ls()
x <- 9
ls()
list.files()
?list.files
args(list.files())
args(list.files
0
args(list.files)
old.dir <- getwd()
crdir(testdir)
mkdir(testdir)
dir.create(testdir)
dir.create("testdir")
setwd("testdir")
file.create("mytest.R")
list.files()
ls()
file.exists
file.exists("mytest.R")
file.info("mytest.")
file.info("mytest.R")
file.rename("mytest.R", "mytest2.R")
file.copy("mytest2.R", "mytest3.R")
fle.path("mytest3.R")
file.path("mytest3.R")
file.create("testdir2/testdir2")
dir.create("testdir2/testdir2", recursive = TRUE)
dir.create("testdir2/testdir3", recursive = TRUE)
dir.remove("testdir2")
unlink("testdir2")
unlink("testdir2", recursive = TRUE)
setdir(old.dir)
setwd(old.dir)
unlink("testdir")
unlink("testdir", recursive = TRUE)
createRatingsMatrix()
setwd("C:/Users/Natalia/Desktop/Python/WebMining")
source(ratings.r)
#Function to create the user-item ratings matrix
source('C:/Users/Natalia/Desktop/Python/WebMining/ratings.r')
install.packages("rjson")
#Function to create the user-item ratings matrix
library("rjson")
createRatingsMatrix <- function(reviewsFile = "reviewJson2.json", restaurantsFile = "restJson2.json") {
reviews <- fromJSON(reviewsFile)
reviews <- reviews[,c("BusinessID","UserID","stars")]
print(head(reviews))
}
crateRatingsMatrix()
createRatingsMatrix()
crateRatingsMatrix()
createRatingsMatrix()
reviews <- fromJSON("reviewsJSON2.json")
library(json)
library(rjson)
reviews <- fromJSON("reviewsJSON2.json")
reviews <- fromJSON("reviewsJSON2.json")
restaurants <- fromJSON("restJson2.json")
install.packages("jsonlite")
install.packages("jsonlite", repos="http://cran.r-project.org")
library(jsonlite)
restaurants <- fromJSON("restJson2.json")
#Function to create the user-item ratings matrix
library("jsonlite")
createRatingsMatrix <- function(reviewsFile = "reviewJson2.json", restaurantsFile = "restJson2.json") {
reviews <- fromJSON(reviewsFile)
reviews <- reviews[,c("BusinessID","UserID","stars")]
print(head(reviews))
}
createRatingsMatrix()
#Function to create the user-item ratings matrix
library("jsonlite")
createRatingsMatrix <- function(reviewsFile = "reviewJson2.json", restaurantsFile = "restJson2.json") {
reviews <- fromJSON(reviewsFile)
reviews <- reviews[,c("BusinessID","UserID","stars")]
users <- uniue(reviews[,"UserID"])
restaurants <- fromJSON(restaurantsFile)
restaurants <- restaurants[,c("Name", "BusinessID")]
restaurants <- unique(restaurants[,"BusinessID"])
ratings <- matix(NA,nrow(length(users)),ncol(length(restaurants)))
rownames(ratings) <- users
colnames(ratings) <- restaurants
print(dim(ratings))
}
createRatingsMatrix()
#Function to create the user-item ratings matrix
library("jsonlite")
createRatingsMatrix <- function(reviewsFile = "reviewJson2.json", restaurantsFile = "restJson2.json") {
reviews <- fromJSON(reviewsFile)
reviews <- reviews[,c("BusinessID","UserID","stars")]
users <- unique(reviews[,"UserID"])
restaurants <- fromJSON(restaurantsFile)
restaurants <- restaurants[,c("Name", "BusinessID")]
restaurants <- unique(restaurants[,"BusinessID"])
ratings <- matix(NA,nrow(length(users)),ncol(length(restaurants)))
rownames(ratings) <- users
colnames(ratings) <- restaurants
print(dim(ratings))
}
createRatingsMatrix()
#Function to create the user-item ratings matrix
library("jsonlite")
createRatingsMatrix <- function(reviewsFile = "reviewJson2.json", restaurantsFile = "restJson2.json") {
reviews <- fromJSON(reviewsFile)
reviews <- reviews[,c("BusinessID","UserID","stars")]
users <- unique(reviews[,"UserID"])
restaurants <- fromJSON(restaurantsFile)
restaurants <- restaurants[,c("name", "BusinessID")]
restaurants <- unique(restaurants[,"BusinessID"])
ratings <- matix(NA,nrow(length(users)),ncol(length(restaurants)))
rownames(ratings) <- users
colnames(ratings) <- restaurants
print(dim(ratings))
}
createRatingsMatrix()
#Function to create the user-item ratings matrix
library("jsonlite")
createRatingsMatrix <- function(reviewsFile = "reviewJson2.json", restaurantsFile = "restJson2.json") {
reviews <- fromJSON(reviewsFile)
reviews <- reviews[,c("BusinessID","UserID","stars")]
users <- unique(reviews[,"UserID"])
restaurants <- fromJSON(restaurantsFile)
restaurants <- restaurants[,c("name", "BusinessID")]
restaurants <- unique(restaurants[,"BusinessID"])
ratings <- matix(NA,nrow(length(users)),ncol(length(restaurants)))
rownames(ratings) <- users
colnames(ratings) <- restaurants
print(dim(ratings))
}
createRatingsMatrix()
#Function to create the user-item ratings matrix
library("jsonlite")
createRatingsMatrix <- function(reviewsFile = "reviewJson2.json", restaurantsFile = "restJson2.json") {
reviews <- fromJSON(reviewsFile)
reviews <- reviews[,c("BusinessID","UserID","stars")]
users <- unique(reviews[,"UserID"])
restaurants <- fromJSON(restaurantsFile)
restaurants <- restaurants[,c("name", "BusinessID")]
restaurants <- unique(restaurants[,"BusinessID"])
ratings <- matrix(NA,nrow(length(users)),ncol(length(restaurants)))
rownames(ratings) <- users
colnames(ratings) <- restaurants
print(dim(ratings))
}
createRatingsMatrix()
#Function to create the user-item ratings matrix
library("jsonlite")
createRatingsMatrix <- function(reviewsFile = "reviewJson2.json", restaurantsFile = "restJson2.json") {
reviews <- fromJSON(reviewsFile)
reviews <- reviews[,c("BusinessID","UserID","stars")]
users <- unique(reviews[,"UserID"])
restaurants <- fromJSON(restaurantsFile)
restaurants <- restaurants[,c("name", "BusinessID")]
restaurants <- unique(restaurants[,"BusinessID"])
ratings <- matrix(data = NA,nrow(length(users)),ncol(length(restaurants)))
rownames(ratings) <- users
colnames(ratings) <- restaurants
print(dim(ratings))
}
createRatingsMatrix()
#Function to create the user-item ratings matrix
library("jsonlite")
createRatingsMatrix <- function(reviewsFile = "reviewJson2.json", restaurantsFile = "restJson2.json") {
reviews <- fromJSON(reviewsFile)
reviews <- reviews[,c("BusinessID","UserID","stars")]
users <- unique(reviews[,"UserID"])
restaurants <- fromJSON(restaurantsFile)
restaurants <- restaurants[,c("name", "BusinessID")]
restaurants <- unique(restaurants[,"BusinessID"])
ratings <- matrix(data = NA,nrow = length(users),ncol = length(restaurants))
rownames(ratings) <- users
colnames(ratings) <- restaurants
print(dim(ratings))
}
createRatingsMatrix()
m <- matrix(1:10,nrow=5,ncol=2)
m
e
colnames(m)<-c(one,two)
colnames(m)<-c("one","two")
apply(m,1,function(x) print(x["one"])
)
apply(m,1,function(x) print(x["one"]+x["two"]))
createRatingsMatrix <- function(reviewsFile = "reviewJson2.json", restaurantsFile = "restJson2.json") {
reviews <- fromJSON(reviewsFile)
reviews <- reviews[,c("BusinessID","UserID","stars")]
users <- unique(reviews[,"UserID"])
restaurants <- fromJSON(restaurantsFile)
restaurants <- restaurants[,c("name", "BusinessID")]
restaurants <- unique(restaurants[,"BusinessID"])
ratings <- matrix(data = NA,nrow = length(users),ncol = length(restaurants))
rownames(ratings) <- users
colnames(ratings) <- restaurants
apply(reviews,1, function(x) ratings[x$"UserID",x$"BusinessID] <- X$"stars")
}
createRatingsMatrix <- function(reviewsFile = "reviewJson2.json", restaurantsFile = "restJson2.json") {
reviews <- fromJSON(reviewsFile)
reviews <- reviews[,c("BusinessID","UserID","stars")]
users <- unique(reviews[,"UserID"])
restaurants <- fromJSON(restaurantsFile)
restaurants <- restaurants[,c("name", "BusinessID")]
restaurants <- unique(restaurants[,"BusinessID"])
ratings <- matrix(data = NA,nrow = length(users),ncol = length(restaurants))
rownames(ratings) <- users
colnames(ratings) <- restaurants
apply(reviews,1, function(x) ratings[x$"UserID",x$"BusinessID"] <- X$"stars")
}
createRatingsMatrix()
createRatingsMatrix <- function(reviewsFile = "reviewJson2.json", restaurantsFile = "restJson2.json") {
reviews <- fromJSON(reviewsFile)
reviews <- reviews[,c("BusinessID","UserID","stars")]
users <- unique(reviews[,"UserID"])
restaurants <- fromJSON(restaurantsFile)
restaurants <- restaurants[,c("name", "BusinessID")]
restaurants <- unique(restaurants[,"BusinessID"])
ratings <- matrix(data = NA,nrow = length(users),ncol = length(restaurants))
rownames(ratings) <- users
colnames(ratings) <- restaurants
apply(reviews,1, function(x) ratings[x$"UserID",x$"BusinessID"] <- x$"stars")
}
createRatingsMatrix()
m
m2 <- matrix(data=0,nrow=10,ncol=10)
m2
apply(m,1,function(x) m2[m["one"],m["two"]] <- 1)
apply(m,1,function(x) print(x))
apply(m,1,function(x) print(x["one"],x["two"]))
apply(m,1,function(x) print(x["one"]))
apply(m,1,function(x) print(x["two"]))
apply(m,1,function(x) m2["one","wo"])
apply(m,1,function(x) m2["one","two"]<-1)
apply(m,1,function(x) m2[x$"one",x$"two"]<-1)
apply(m,1,function(x) m2[x["one"],x["two"]<-1)
apply(m,1,function(x) m2[x["one"],x["two"]] <- 1)
m2
apply(m,1,function(x) print(m2[x["one"],x["two"]])
apply(m,1,function(x) print(m2[x["one"],x["two"]]))
apply(m,1,function(x) print(m2[x["one"],x["two"]]))
apply(m,1,function(x) m2[x["one"],x["two"]] <- 1)
m2
apply(m,1,function(x) (print(m2[x["one"],x["two"]])))
m2
m
m[one]
m["one]"]
m["one"]
m[,"one"]
m[1,]
x <- m[1,]
x
x["one"]
m2[x["one"],x["two"]]<- 1
m2
apply(m,1,function(x) m2[x["one"],x["two"]]<- 1)
m2
lapply(m,1,function(x) m2[x["one"],x["two"]]<- 1)
lapply(m,1,function(x) m2[x["one"],x["two"]]<- 1)
apply(m,1,function(x) m2[x["one"],x["two"]]<- 1)
myFunction <- function(x,y) {
m2(x,y) <- 1
}
apply(m,1,myFunction(m["one"],m["two"]))
apply(m,1,myFunction(m["one"],m["two"]))
> myFunction <- function(x,y) {
m2[x,y] <- 1
}
> myFunction <- function(x,y) {
m2[x,y] <- 1
}
> myFunction <- function(x,y) {
m2[x,y] <- 1}
> myFunction <- function(x,y) {
m2[x,y] <- 1}
myFunction <- function(x,y) {
m2[x,y]<-1
}
apply(m,1,myFunction(m["one"],m["two"]))
myFunction(2,3)
m2
myFunction(1,1)
m2
apply(m,1,function(x) m2[x["one"],x["two"]]<- 2)
m2
m2
apply(m,1,function(x) m2[x["one"],x["two"]]<- "X")
m2
apply(m,1,function(x) {m2[x["one"],x["two"]] <- "X"})
m2
function <- xFactor(x,y){}
function <- xFactor(x,y){}
xFactor <- function(x,y){
m2[x,y]<-"x"
}
xFactor(1,2)
m
m2
xFactor <- function(x,y){
+     m2[x,y]<-"x"
+
+ }
xFactor <- function(x,y){
+     m2[x,y]<- 7
+
+ }
xFactor <- function(x,y){
+     m2[x,y]<- 7
+    }
xFactor <- function(x,y) {}
xFactor <- function(x,y) {
m2[x,y] <- 7
}
xFactor(2,3)
m2
m2[2,3] <- 7
m2
apply(m2,1, function(x) x<-0)
m2
apply(m,1,myFactor)
apply(m,1,xFactor)
m2
for[1 in nrow(m)] {}
for[row in nrow(m)] {
m2[m["one"],m["two"]]<-7
}
for[row in nrow(m)] {
m2[m["one"],m["two"]]<-7
}
for(row in nrow(m)) {
m2[m["one"],m["two"]]<-7
}
m2
for(row in nrow(m)) {
m2[m["one"],m["two"]]<-7
}
for(row in nrow(m)) {
m2[m[row,"one"],m[row,"two"]]<-7
}
m2
m2
m["one"]
m[1,"one"]
for(row in m) {print(row)}
m
apply(m,1,print(m["one"],m["two"]))
apply(m,1,print(m["one"]))
apply(m,1,print(x["one"]))
apply(m,1,x["one"])
apply(m,1, function(x) x["one"])
apply(m,1, function(x) x["one"], x["two"])
apply(m,1, function(x) {x["one"], x["two"]])
apply(m,1, function(x) {x["one"], x["two"]})
apply(m,1, function(x) z[x["one"].x["two"]])
apply(m,1, function(x) z[x["one"],x["two"]])
apply(m,1, function(x) m2[x["one"],x["two"]])
apply(m,1, function(x) m2[x["one"],x["two"]]<-4)
m2
m2
apply(m,1, function(x) m2[m2[x["one"],x["two"]]]<-4)
m2
apply(m,1, function(x) m2[m["one"],m["two"]]<-4)
m2
for (i in nrow(m)) {
m2[m[i,"one"],m[i,"two"]] <- 4
}
m2
m
m[1,"one"]
m[3,"one"]
for (i in !:nrow(m)) {
m2[m[i,"one"],m[i,"two"]] <- 4
}
for(i in 1:nrow(m)) {
m2[m[i,"one"],m[i,"two"]] <- 4
}
m2
for(i in 1:nrow(reviews)) {
ratings[reviews[i,"UserId"],reviews[i,"Business"]] <- reviews[i,"stars"]
}
#Function to create the user-item ratings matrix
library("jsonlite")
createRatingsMatrix <- function(reviewsFile = "reviewJson2.json", restaurantsFile = "restJson2.json") {
reviews <- fromJSON(reviewsFile)
reviews <- reviews[,c("BusinessID","UserID","stars")]
users <- unique(reviews[,"UserID"])
restaurants <- fromJSON(restaurantsFile)
restaurants <- restaurants[,c("name", "BusinessID")]
restaurants <- unique(restaurants[,"BusinessID"])
ratings <- matrix(data = NA,nrow = length(users),ncol = length(restaurants))
rownames(ratings) <- users
colnames(ratings) <- restaurants
apply(reviews,1, function(x) ratings[x$"UserID",x$"BusinessID"] <- x$"stars")
for(i in 1:nrow(reviews)) {
ratings[reviews[i,"UserId"],reviews[i,"Business"]] <- reviews[i,"stars"]
}
}
createRatingsMatrix()
#Function to create the user-item ratings matrix
library("jsonlite")
createRatingsMatrix <- function(reviewsFile = "reviewJson2.json", restaurantsFile = "restJson2.json") {
reviews <- fromJSON(reviewsFile)
reviews <- reviews[,c("BusinessID","UserID","stars")]
users <- unique(reviews[,"UserID"])
restaurants <- fromJSON(restaurantsFile)
restaurants <- restaurants[,c("name", "BusinessID")]
restaurants <- unique(restaurants[,"BusinessID"])
ratings <- matrix(data = NA,nrow = length(users),ncol = length(restaurants))
rownames(ratings) <- users
colnames(ratings) <- restaurants
for(i in 1:nrow(reviews)) {
ratings[reviews[i,"UserId"],reviews[i,"Business"]] <- reviews[i,"stars"]
}
}
createRatingsMatrix()
dim(ratings)
#Function to create the user-item ratings matrix
library("jsonlite")
createRatingsMatrix <- function(reviewsFile = "reviewJson2.json", restaurantsFile = "restJson2.json") {
reviews <- fromJSON(reviewsFile)
reviews <- reviews[,c("BusinessID","UserID","stars")]
users <- unique(reviews[,"UserID"])
restaurants <- fromJSON(restaurantsFile)
restaurants <- restaurants[,c("name", "BusinessID")]
restaurants <- unique(restaurants[,"BusinessID"])
ratings <- matrix(data = NA,nrow = length(users),ncol = length(restaurants))
rownames(ratings) <- users
colnames(ratings) <- restaurants
for(i in 1:nrow(reviews)) {
ratings[reviews[i,"UserId"],reviews[i,"Business"]] <- reviews[i,"stars"]
}
ratings
}
createRatingsMatrix()
ratings <- createRatingsMatrix()
dim(ratings)
sums <- apply(ratings,1,sum, na.rm = TRUE)
sums <- apply(ratings,1,max, na.rm = TRUE)
warnings()
head(ratings)
head(reviews)
reviews <- fromJSON(reviewsFile)
reviews <- reviews[,c("BusinessID","UserID","stars")]
reviews <- fromJSON("reviewJson2.json")
reviews <- reviews[,c("BusinessID","UserID","stars")]
head(reviews)
ratings["suemrk.","Dub00001"]
nrow(reviews)
review[2,"stars"]
reviews[2,"stars"]
for ( i in 1:nrow(reviews)) {
ratings[reviews[i,"UserID"], reviews[i,"BusinessID"]] <- as.numeric(reviews[i,"stars"])
}
head(ratings)
sums <- apply(ratings,1,sum,na.rm = TRU)
sums <- apply(ratings,1,sum,na.rm = TRUE)
sums <- apply(ratings,1,function(x) sum(!is.na(x))
)
head(sums)
ratings["vanavares",]
is.na(ratings["vanavares",])
bad <- is.na(ratings["vanavares",])
ratings["vanavares",bad]
ratings["vanavares",!bad]
